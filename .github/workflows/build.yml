name: build

defaults:
  run:
    shell: pwsh

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    tags: [ v* ]

jobs:
  build:
    strategy:
      matrix:
        include:
        - rust: stable
        - rust: nightly
        - rust: beta
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install ${{ matrix.rust }} rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        components: clippy
        override: true

    - name: Debug build
      run: cargo build --all-features -vv

    - name: Release build
      run: cargo build --release --all-features -vv

    - name: Clippy
      run: cargo clippy --all-features -vv -- -D warnings

    - name: Clippy tests
      run: cargo clippy --all-features -vv --tests -- -D warnings

    - name: Clippy release
      run: cargo clippy --all-features -vv --release -- -D warnings

    - name: Test
      run: cargo test --all-features -vv

    - name: Publish a rolling latest release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: latest
        prerelease: true
        title: Build from latest commit
        files: target/release/uiac.exe

  check-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install stable rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt
        override: true

    - name: Check formatting
      run: cargo fmt -v -- --check

  release:
    runs-on: windows-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3

    - name: Release build
      run: cargo build --release

    - name: Publish the release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        files: target/release/uiac.exe
